<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
    <comment>** SAME AS ENGLISH **</comment>
  </data>
  <data name="CannotCreateDatabaseFileTitle" xml:space="preserve">
    <value>Cannot Create Database File</value>
    <comment>** SAME AS ENGLISH **</comment>
  </data>
  <data name="CreateDatabase" xml:space="preserve">
    <value>Create Database</value>
    <comment>** SAME AS ENGLISH **</comment>
  </data>
  <data name="CreatedDatabaseFile" xml:space="preserve">
    <value>Created the database file {0}</value>
    <comment>** SAME AS ENGLISH **</comment>
  </data>
  <data name="CreatedDatabaseFileTitle" xml:space="preserve">
    <value>Created Database File</value>
    <comment>** SAME AS ENGLISH **</comment>
  </data>
  <data name="DatabaseFileAlreadyExists" xml:space="preserve">
    <value>The database file already exists</value>
    <comment>** SAME AS ENGLISH **</comment>
  </data>
  <data name="DatabaseFileName" xml:space="preserve">
    <value>Database filename</value>
    <comment>** SAME AS ENGLISH **</comment>
  </data>
  <data name="DatabaseLocked" xml:space="preserve">
    <value>The database is currently locked by another program. Some flights may not be recorded.</value>
    <comment>** SAME AS ENGLISH **</comment>
  </data>
  <data name="Disabled" xml:space="preserve">
    <value>Disabled</value>
    <comment>** SAME AS ENGLISH **</comment>
  </data>
  <data name="Enabled" xml:space="preserve">
    <value>Enabled</value>
    <comment>** SAME AS ENGLISH **</comment>
  </data>
  <data name="EnabledAndUpdatingSomething" xml:space="preserve">
    <value>Enabled, updating {0}</value>
    <comment>** SAME AS ENGLISH **</comment>
  </data>
  <data name="EnabledBadReceiver" xml:space="preserve">
    <value>Enabled, receiver not enabled or invalid</value>
    <comment>** SAME AS ENGLISH **</comment>
  </data>
  <data name="EnabledNoDatabase" xml:space="preserve">
    <value>Enabled, database not specified</value>
    <comment>** SAME AS ENGLISH **</comment>
  </data>
  <data name="EnabledNoReceiver" xml:space="preserve">
    <value>Enabled, no receiver specified</value>
    <comment>** SAME AS ENGLISH **</comment>
  </data>
  <data name="EnabledNotUpdating" xml:space="preserve">
    <value>Enabled but not updating database</value>
    <comment>** SAME AS ENGLISH **</comment>
  </data>
  <data name="ExceptionCaught" xml:space="preserve">
    <value>Exception caught: {0}</value>
    <comment>** SAME AS ENGLISH **</comment>
  </data>
  <data name="ExceptionCaughtWhenClosingSession" xml:space="preserve">
    <value>Exception caught when closing session: {0}</value>
    <comment>** SAME AS ENGLISH **</comment>
  </data>
  <data name="ExceptionCaughtWhenProcessingMessage" xml:space="preserve">
    <value>Exception caught when processing message: {0}</value>
    <comment>** SAME AS ENGLISH **</comment>
  </data>
  <data name="ExceptionCaughtWhenStartingSession" xml:space="preserve">
    <value>Exception caught when starting session: {0}</value>
    <comment>** SAME AS ENGLISH **</comment>
  </data>
  <data name="NotUpdatingDatabase" xml:space="preserve">
    <value>Not updating database</value>
    <comment>** SAME AS ENGLISH **</comment>
  </data>
  <data name="OK" xml:space="preserve">
    <value>OK</value>
    <comment>** SAME AS ENGLISH **</comment>
  </data>
  <data name="OnlyUpdateDatabasesCreatedByPlugin" xml:space="preserve">
    <value>Only update databases that this plugin created</value>
    <comment>** SAME AS ENGLISH **</comment>
  </data>
  <data name="OptionsViewTitle" xml:space="preserve">
    <value>BaseStation Database Writer Options</value>
    <comment>** SAME AS ENGLISH **</comment>
  </data>
  <data name="PluginName" xml:space="preserve">
    <value>Database Writer</value>
    <comment>** SAME AS ENGLISH **</comment>
  </data>
  <data name="Receiver" xml:space="preserve">
    <value>Receiver</value>
    <comment>** SAME AS ENGLISH **</comment>
  </data>
  <data name="SelectDatabaseFile" xml:space="preserve">
    <value>Select Database File</value>
    <comment>** SAME AS ENGLISH **</comment>
  </data>
  <data name="SomethingDoesNotExist" xml:space="preserve">
    <value>'{0}' does not exist</value>
    <comment>** SAME AS ENGLISH **</comment>
  </data>
  <data name="SomethingIsZeroLength" xml:space="preserve">
    <value>'{0}' is zero length</value>
    <comment>** SAME AS ENGLISH **</comment>
  </data>
  <data name="UpdateExistingAircraft" xml:space="preserve">
    <value>Overwrite details on existing aircraft</value>
    <comment>** SAME AS ENGLISH **</comment>
  </data>
  <data name="UpdatingDatabasesNotCreatedByPluginForbidden" xml:space="preserve">
    <value>Settings prevent update of databases not created by plugin</value>
    <comment>** SAME AS ENGLISH **</comment>
  </data>
  <data name="UseDefaultFileName" xml:space="preserve">
    <value>Use default file name</value>
    <comment>** SAME AS ENGLISH **</comment>
  </data>
  <data name="WebAdminMenuName" xml:space="preserve">
    <value>Database Writer</value>
    <comment>** SAME AS ENGLISH **</comment>
  </data>
  <data name="WriteOnlineLookupsNoticeAllAircraft" xml:space="preserve">
    <value>Saving online lookups will update the registration, country, serial number, year built, manufacturer, model and operator details for new and existing aircraft records that are more than 28 days old.</value>
    <comment>** SAME AS ENGLISH **</comment>
  </data>
  <data name="WriteOnlineLookupsNoticeJustNew" xml:space="preserve">
    <value>Saving online lookups will update the registration, country, serial number, year built, manufacturer, model and operator details for new aircraft records.</value>
    <comment>** SAME AS ENGLISH **</comment>
  </data>
  <data name="WriteOnlineLookupsToDatabase" xml:space="preserve">
    <value>Save online lookups in database</value>
    <comment>** SAME AS ENGLISH **</comment>
  </data>
  <data name="WritingOnlineLookupsToDatabase" xml:space="preserve">
    <value>Saving online lookups</value>
    <comment>** SAME AS ENGLISH **</comment>
  </data>
</root>