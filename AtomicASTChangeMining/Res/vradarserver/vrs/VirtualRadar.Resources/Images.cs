// Copyright © 2010 onwards, Andrew Whewell
// All rights reserved.
//
// Redistribution and use of this software in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
//    * Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
//    * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
//    * Neither the name of the author nor the names of the program's contributors may be used to endorse or promote products derived from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHORS OF THE SOFTWARE BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// ===========================================================================================
//                           This file is generated by a T4 script
//   ANY CHANGES MADE DIRECTLY TO THIS FILE WILL BE LOST THE NEXT TIME THE FILE IS GENERATED
// ===========================================================================================

namespace VirtualRadar.Resources
{
    /// <summary>
    /// A static class that exposes all of the images in the common resources.
    /// </summary>
    /// <remarks><para>
    /// These images are read/write properties. The application never writes to the properties but
    /// a plugin that wanted to change the graphics used by the application could do so by assigning
    /// new images to the appropriate properties of the class. Care should be taken to allow enough
    /// room on images that are rotated by the website and to replace existing images with images
    /// of the same dimensions and colour depth.
    /// </para><para>
    /// Assigning null to an image resets it back to the default image.
    /// </para></remarks>
    public static class Images
    {
        private static readonly byte[] _Add16x16_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.Add16x16.png");
        private static byte[] _Add16x16;
        /// <summary>
        /// Gets or sets the Add16x16 image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/Add16x16.png" alt="" title="Add16x16" />
        /// </remarks>
        public static byte[] Add16x16
        {
            get { return _Add16x16 ?? _Add16x16_Stock; }
            set { _Add16x16 = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="Add16x16"/> image has been customised or not.
        /// </summary>
        public static bool Add16x16_IsCustom
        {
            get { return _Add16x16 != null; }
        }

        private static readonly byte[] _ApplicationIcon_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.ApplicationIcon.ico");
        private static byte[] _ApplicationIcon;
        /// <summary>
        /// Gets or sets the ApplicationIcon image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/ApplicationIcon.ico" alt="" title="ApplicationIcon" />
        /// </remarks>
        public static byte[] ApplicationIcon
        {
            get { return _ApplicationIcon ?? _ApplicationIcon_Stock; }
            set { _ApplicationIcon = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="ApplicationIcon"/> image has been customised or not.
        /// </summary>
        public static bool ApplicationIcon_IsCustom
        {
            get { return _ApplicationIcon != null; }
        }

        private static readonly byte[] _ArrowBack16x16_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.ArrowBack16x16.png");
        private static byte[] _ArrowBack16x16;
        /// <summary>
        /// Gets or sets the ArrowBack16x16 image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/ArrowBack16x16.png" alt="" title="ArrowBack16x16" />
        /// </remarks>
        public static byte[] ArrowBack16x16
        {
            get { return _ArrowBack16x16 ?? _ArrowBack16x16_Stock; }
            set { _ArrowBack16x16 = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="ArrowBack16x16"/> image has been customised or not.
        /// </summary>
        public static bool ArrowBack16x16_IsCustom
        {
            get { return _ArrowBack16x16 != null; }
        }

        private static readonly byte[] _ArrowForward16x16_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.ArrowForward16x16.png");
        private static byte[] _ArrowForward16x16;
        /// <summary>
        /// Gets or sets the ArrowForward16x16 image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/ArrowForward16x16.png" alt="" title="ArrowForward16x16" />
        /// </remarks>
        public static byte[] ArrowForward16x16
        {
            get { return _ArrowForward16x16 ?? _ArrowForward16x16_Stock; }
            set { _ArrowForward16x16 = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="ArrowForward16x16"/> image has been customised or not.
        /// </summary>
        public static bool ArrowForward16x16_IsCustom
        {
            get { return _ArrowForward16x16 != null; }
        }

        private static readonly byte[] _BlueBall_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.BlueBall.png");
        private static byte[] _BlueBall;
        /// <summary>
        /// Gets or sets the BlueBall image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/BlueBall.png" alt="" title="BlueBall" />
        /// </remarks>
        public static byte[] BlueBall
        {
            get { return _BlueBall ?? _BlueBall_Stock; }
            set { _BlueBall = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="BlueBall"/> image has been customised or not.
        /// </summary>
        public static bool BlueBall_IsCustom
        {
            get { return _BlueBall != null; }
        }

        private static readonly byte[] _Cancel16x16_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.Cancel16x16.png");
        private static byte[] _Cancel16x16;
        /// <summary>
        /// Gets or sets the Cancel16x16 image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/Cancel16x16.png" alt="" title="Cancel16x16" />
        /// </remarks>
        public static byte[] Cancel16x16
        {
            get { return _Cancel16x16 ?? _Cancel16x16_Stock; }
            set { _Cancel16x16 = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="Cancel16x16"/> image has been customised or not.
        /// </summary>
        public static bool Cancel16x16_IsCustom
        {
            get { return _Cancel16x16 != null; }
        }

        private static readonly byte[] _CancelSmall16x16_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.CancelSmall16x16.png");
        private static byte[] _CancelSmall16x16;
        /// <summary>
        /// Gets or sets the CancelSmall16x16 image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/CancelSmall16x16.png" alt="" title="CancelSmall16x16" />
        /// </remarks>
        public static byte[] CancelSmall16x16
        {
            get { return _CancelSmall16x16 ?? _CancelSmall16x16_Stock; }
            set { _CancelSmall16x16 = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="CancelSmall16x16"/> image has been customised or not.
        /// </summary>
        public static bool CancelSmall16x16_IsCustom
        {
            get { return _CancelSmall16x16 != null; }
        }

        private static readonly byte[] _ChevronBlueCircle_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.ChevronBlueCircle.png");
        private static byte[] _ChevronBlueCircle;
        /// <summary>
        /// Gets or sets the ChevronBlueCircle image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/ChevronBlueCircle.png" alt="" title="ChevronBlueCircle" />
        /// </remarks>
        public static byte[] ChevronBlueCircle
        {
            get { return _ChevronBlueCircle ?? _ChevronBlueCircle_Stock; }
            set { _ChevronBlueCircle = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="ChevronBlueCircle"/> image has been customised or not.
        /// </summary>
        public static bool ChevronBlueCircle_IsCustom
        {
            get { return _ChevronBlueCircle != null; }
        }

        private static readonly byte[] _ChevronGreenCircle_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.ChevronGreenCircle.png");
        private static byte[] _ChevronGreenCircle;
        /// <summary>
        /// Gets or sets the ChevronGreenCircle image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/ChevronGreenCircle.png" alt="" title="ChevronGreenCircle" />
        /// </remarks>
        public static byte[] ChevronGreenCircle
        {
            get { return _ChevronGreenCircle ?? _ChevronGreenCircle_Stock; }
            set { _ChevronGreenCircle = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="ChevronGreenCircle"/> image has been customised or not.
        /// </summary>
        public static bool ChevronGreenCircle_IsCustom
        {
            get { return _ChevronGreenCircle != null; }
        }

        private static readonly byte[] _ChevronRedCircle_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.ChevronRedCircle.png");
        private static byte[] _ChevronRedCircle;
        /// <summary>
        /// Gets or sets the ChevronRedCircle image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/ChevronRedCircle.png" alt="" title="ChevronRedCircle" />
        /// </remarks>
        public static byte[] ChevronRedCircle
        {
            get { return _ChevronRedCircle ?? _ChevronRedCircle_Stock; }
            set { _ChevronRedCircle = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="ChevronRedCircle"/> image has been customised or not.
        /// </summary>
        public static bool ChevronRedCircle_IsCustom
        {
            get { return _ChevronRedCircle != null; }
        }

        private static readonly byte[] _CloseSlider_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.CloseSlider.png");
        private static byte[] _CloseSlider;
        /// <summary>
        /// Gets or sets the CloseSlider image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/CloseSlider.png" alt="" title="CloseSlider" />
        /// </remarks>
        public static byte[] CloseSlider
        {
            get { return _CloseSlider ?? _CloseSlider_Stock; }
            set { _CloseSlider = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="CloseSlider"/> image has been customised or not.
        /// </summary>
        public static bool CloseSlider_IsCustom
        {
            get { return _CloseSlider != null; }
        }

        private static readonly byte[] _Collapse_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.Collapse.png");
        private static byte[] _Collapse;
        /// <summary>
        /// Gets or sets the Collapse image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/Collapse.png" alt="" title="Collapse" />
        /// </remarks>
        public static byte[] Collapse
        {
            get { return _Collapse ?? _Collapse_Stock; }
            set { _Collapse = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="Collapse"/> image has been customised or not.
        /// </summary>
        public static bool Collapse_IsCustom
        {
            get { return _Collapse != null; }
        }

        private static readonly byte[] _Compass_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.Compass.png");
        private static byte[] _Compass;
        /// <summary>
        /// Gets or sets the Compass image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/Compass.png" alt="" title="Compass" />
        /// </remarks>
        public static byte[] Compass
        {
            get { return _Compass ?? _Compass_Stock; }
            set { _Compass = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="Compass"/> image has been customised or not.
        /// </summary>
        public static bool Compass_IsCustom
        {
            get { return _Compass != null; }
        }

        private static readonly byte[] _Corner_BottomLeft_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.Corner_BottomLeft.png");
        private static byte[] _Corner_BottomLeft;
        /// <summary>
        /// Gets or sets the Corner_BottomLeft image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/Corner_BottomLeft.png" alt="" title="Corner_BottomLeft" />
        /// </remarks>
        public static byte[] Corner_BottomLeft
        {
            get { return _Corner_BottomLeft ?? _Corner_BottomLeft_Stock; }
            set { _Corner_BottomLeft = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="Corner_BottomLeft"/> image has been customised or not.
        /// </summary>
        public static bool Corner_BottomLeft_IsCustom
        {
            get { return _Corner_BottomLeft != null; }
        }

        private static readonly byte[] _Corner_BottomRight_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.Corner_BottomRight.png");
        private static byte[] _Corner_BottomRight;
        /// <summary>
        /// Gets or sets the Corner_BottomRight image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/Corner_BottomRight.png" alt="" title="Corner_BottomRight" />
        /// </remarks>
        public static byte[] Corner_BottomRight
        {
            get { return _Corner_BottomRight ?? _Corner_BottomRight_Stock; }
            set { _Corner_BottomRight = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="Corner_BottomRight"/> image has been customised or not.
        /// </summary>
        public static bool Corner_BottomRight_IsCustom
        {
            get { return _Corner_BottomRight != null; }
        }

        private static readonly byte[] _Corner_TopLeft_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.Corner_TopLeft.png");
        private static byte[] _Corner_TopLeft;
        /// <summary>
        /// Gets or sets the Corner_TopLeft image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/Corner_TopLeft.png" alt="" title="Corner_TopLeft" />
        /// </remarks>
        public static byte[] Corner_TopLeft
        {
            get { return _Corner_TopLeft ?? _Corner_TopLeft_Stock; }
            set { _Corner_TopLeft = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="Corner_TopLeft"/> image has been customised or not.
        /// </summary>
        public static bool Corner_TopLeft_IsCustom
        {
            get { return _Corner_TopLeft != null; }
        }

        private static readonly byte[] _Corner_TopRight_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.Corner_TopRight.png");
        private static byte[] _Corner_TopRight;
        /// <summary>
        /// Gets or sets the Corner_TopRight image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/Corner_TopRight.png" alt="" title="Corner_TopRight" />
        /// </remarks>
        public static byte[] Corner_TopRight
        {
            get { return _Corner_TopRight ?? _Corner_TopRight_Stock; }
            set { _Corner_TopRight = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="Corner_TopRight"/> image has been customised or not.
        /// </summary>
        public static bool Corner_TopRight_IsCustom
        {
            get { return _Corner_TopRight != null; }
        }

        private static readonly byte[] _Crosshair_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.Crosshair.png");
        private static byte[] _Crosshair;
        /// <summary>
        /// Gets or sets the Crosshair image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/Crosshair.png" alt="" title="Crosshair" />
        /// </remarks>
        public static byte[] Crosshair
        {
            get { return _Crosshair ?? _Crosshair_Stock; }
            set { _Crosshair = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="Crosshair"/> image has been customised or not.
        /// </summary>
        public static bool Crosshair_IsCustom
        {
            get { return _Crosshair != null; }
        }

        private static readonly byte[] _Decoding16x16_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.Decoding16x16.png");
        private static byte[] _Decoding16x16;
        /// <summary>
        /// Gets or sets the Decoding16x16 image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/Decoding16x16.png" alt="" title="Decoding16x16" />
        /// </remarks>
        public static byte[] Decoding16x16
        {
            get { return _Decoding16x16 ?? _Decoding16x16_Stock; }
            set { _Decoding16x16 = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="Decoding16x16"/> image has been customised or not.
        /// </summary>
        public static bool Decoding16x16_IsCustom
        {
            get { return _Decoding16x16 != null; }
        }

        private static readonly byte[] _Edit16x16_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.Edit16x16.png");
        private static byte[] _Edit16x16;
        /// <summary>
        /// Gets or sets the Edit16x16 image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/Edit16x16.png" alt="" title="Edit16x16" />
        /// </remarks>
        public static byte[] Edit16x16
        {
            get { return _Edit16x16 ?? _Edit16x16_Stock; }
            set { _Edit16x16 = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="Edit16x16"/> image has been customised or not.
        /// </summary>
        public static bool Edit16x16_IsCustom
        {
            get { return _Edit16x16 != null; }
        }

        private static readonly byte[] _Expand_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.Expand.png");
        private static byte[] _Expand;
        /// <summary>
        /// Gets or sets the Expand image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/Expand.png" alt="" title="Expand" />
        /// </remarks>
        public static byte[] Expand
        {
            get { return _Expand ?? _Expand_Stock; }
            set { _Expand = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="Expand"/> image has been customised or not.
        /// </summary>
        public static bool Expand_IsCustom
        {
            get { return _Expand != null; }
        }

        private static readonly byte[] _Favicon_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.Favicon.ico");
        private static byte[] _Favicon;
        /// <summary>
        /// Gets or sets the Favicon image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/Favicon.ico" alt="" title="Favicon" />
        /// </remarks>
        public static byte[] Favicon
        {
            get { return _Favicon ?? _Favicon_Stock; }
            set { _Favicon = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="Favicon"/> image has been customised or not.
        /// </summary>
        public static bool Favicon_IsCustom
        {
            get { return _Favicon != null; }
        }

        private static readonly byte[] _FollowMe_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.FollowMe.png");
        private static byte[] _FollowMe;
        /// <summary>
        /// Gets or sets the FollowMe image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/FollowMe.png" alt="" title="FollowMe" />
        /// </remarks>
        public static byte[] FollowMe
        {
            get { return _FollowMe ?? _FollowMe_Stock; }
            set { _FollowMe = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="FollowMe"/> image has been customised or not.
        /// </summary>
        public static bool FollowMe_IsCustom
        {
            get { return _FollowMe != null; }
        }

        private static readonly byte[] _Gear16x16_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.Gear16x16.png");
        private static byte[] _Gear16x16;
        /// <summary>
        /// Gets or sets the Gear16x16 image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/Gear16x16.png" alt="" title="Gear16x16" />
        /// </remarks>
        public static byte[] Gear16x16
        {
            get { return _Gear16x16 ?? _Gear16x16_Stock; }
            set { _Gear16x16 = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="Gear16x16"/> image has been customised or not.
        /// </summary>
        public static bool Gear16x16_IsCustom
        {
            get { return _Gear16x16 != null; }
        }

        private static readonly byte[] _GotoCurrentLocation_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.GotoCurrentLocation.png");
        private static byte[] _GotoCurrentLocation;
        /// <summary>
        /// Gets or sets the GotoCurrentLocation image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/GotoCurrentLocation.png" alt="" title="GotoCurrentLocation" />
        /// </remarks>
        public static byte[] GotoCurrentLocation
        {
            get { return _GotoCurrentLocation ?? _GotoCurrentLocation_Stock; }
            set { _GotoCurrentLocation = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="GotoCurrentLocation"/> image has been customised or not.
        /// </summary>
        public static bool GotoCurrentLocation_IsCustom
        {
            get { return _GotoCurrentLocation != null; }
        }

        private static readonly byte[] _HelpAbout_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.HelpAbout.png");
        private static byte[] _HelpAbout;
        /// <summary>
        /// Gets or sets the HelpAbout image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/HelpAbout.png" alt="" title="HelpAbout" />
        /// </remarks>
        public static byte[] HelpAbout
        {
            get { return _HelpAbout ?? _HelpAbout_Stock; }
            set { _HelpAbout = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="HelpAbout"/> image has been customised or not.
        /// </summary>
        public static bool HelpAbout_IsCustom
        {
            get { return _HelpAbout != null; }
        }

        private static readonly byte[] _HideList_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.HideList.png");
        private static byte[] _HideList;
        /// <summary>
        /// Gets or sets the HideList image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/HideList.png" alt="" title="HideList" />
        /// </remarks>
        public static byte[] HideList
        {
            get { return _HideList ?? _HideList_Stock; }
            set { _HideList = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="HideList"/> image has been customised or not.
        /// </summary>
        public static bool HideList_IsCustom
        {
            get { return _HideList != null; }
        }

        private static readonly byte[] _IPadSplash_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.IPadSplash.png");
        private static byte[] _IPadSplash;
        /// <summary>
        /// Gets or sets the IPadSplash image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/IPadSplash.png" alt="" title="IPadSplash" />
        /// </remarks>
        public static byte[] IPadSplash
        {
            get { return _IPadSplash ?? _IPadSplash_Stock; }
            set { _IPadSplash = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="IPadSplash"/> image has been customised or not.
        /// </summary>
        public static bool IPadSplash_IsCustom
        {
            get { return _IPadSplash != null; }
        }

        private static readonly byte[] _IPhoneBackButton_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.IPhoneBackButton.png");
        private static byte[] _IPhoneBackButton;
        /// <summary>
        /// Gets or sets the IPhoneBackButton image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/IPhoneBackButton.png" alt="" title="IPhoneBackButton" />
        /// </remarks>
        public static byte[] IPhoneBackButton
        {
            get { return _IPhoneBackButton ?? _IPhoneBackButton_Stock; }
            set { _IPhoneBackButton = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="IPhoneBackButton"/> image has been customised or not.
        /// </summary>
        public static bool IPhoneBackButton_IsCustom
        {
            get { return _IPhoneBackButton != null; }
        }

        private static readonly byte[] _IPhoneBlueButton_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.IPhoneBlueButton.png");
        private static byte[] _IPhoneBlueButton;
        /// <summary>
        /// Gets or sets the IPhoneBlueButton image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/IPhoneBlueButton.png" alt="" title="IPhoneBlueButton" />
        /// </remarks>
        public static byte[] IPhoneBlueButton
        {
            get { return _IPhoneBlueButton ?? _IPhoneBlueButton_Stock; }
            set { _IPhoneBlueButton = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="IPhoneBlueButton"/> image has been customised or not.
        /// </summary>
        public static bool IPhoneBlueButton_IsCustom
        {
            get { return _IPhoneBlueButton != null; }
        }

        private static readonly byte[] _IPhoneChevron_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.IPhoneChevron.png");
        private static byte[] _IPhoneChevron;
        /// <summary>
        /// Gets or sets the IPhoneChevron image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/IPhoneChevron.png" alt="" title="IPhoneChevron" />
        /// </remarks>
        public static byte[] IPhoneChevron
        {
            get { return _IPhoneChevron ?? _IPhoneChevron_Stock; }
            set { _IPhoneChevron = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="IPhoneChevron"/> image has been customised or not.
        /// </summary>
        public static bool IPhoneChevron_IsCustom
        {
            get { return _IPhoneChevron != null; }
        }

        private static readonly byte[] _IPhoneGrayButton_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.IPhoneGrayButton.png");
        private static byte[] _IPhoneGrayButton;
        /// <summary>
        /// Gets or sets the IPhoneGrayButton image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/IPhoneGrayButton.png" alt="" title="IPhoneGrayButton" />
        /// </remarks>
        public static byte[] IPhoneGrayButton
        {
            get { return _IPhoneGrayButton ?? _IPhoneGrayButton_Stock; }
            set { _IPhoneGrayButton = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="IPhoneGrayButton"/> image has been customised or not.
        /// </summary>
        public static bool IPhoneGrayButton_IsCustom
        {
            get { return _IPhoneGrayButton != null; }
        }

        private static readonly byte[] _IPhoneIcon_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.IPhoneIcon.png");
        private static byte[] _IPhoneIcon;
        /// <summary>
        /// Gets or sets the IPhoneIcon image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/IPhoneIcon.png" alt="" title="IPhoneIcon" />
        /// </remarks>
        public static byte[] IPhoneIcon
        {
            get { return _IPhoneIcon ?? _IPhoneIcon_Stock; }
            set { _IPhoneIcon = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="IPhoneIcon"/> image has been customised or not.
        /// </summary>
        public static bool IPhoneIcon_IsCustom
        {
            get { return _IPhoneIcon != null; }
        }

        private static readonly byte[] _IPhoneListGroup_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.IPhoneListGroup.png");
        private static byte[] _IPhoneListGroup;
        /// <summary>
        /// Gets or sets the IPhoneListGroup image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/IPhoneListGroup.png" alt="" title="IPhoneListGroup" />
        /// </remarks>
        public static byte[] IPhoneListGroup
        {
            get { return _IPhoneListGroup ?? _IPhoneListGroup_Stock; }
            set { _IPhoneListGroup = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="IPhoneListGroup"/> image has been customised or not.
        /// </summary>
        public static bool IPhoneListGroup_IsCustom
        {
            get { return _IPhoneListGroup != null; }
        }

        private static readonly byte[] _IPhoneOnOff_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.IPhoneOnOff.png");
        private static byte[] _IPhoneOnOff;
        /// <summary>
        /// Gets or sets the IPhoneOnOff image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/IPhoneOnOff.png" alt="" title="IPhoneOnOff" />
        /// </remarks>
        public static byte[] IPhoneOnOff
        {
            get { return _IPhoneOnOff ?? _IPhoneOnOff_Stock; }
            set { _IPhoneOnOff = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="IPhoneOnOff"/> image has been customised or not.
        /// </summary>
        public static bool IPhoneOnOff_IsCustom
        {
            get { return _IPhoneOnOff != null; }
        }

        private static readonly byte[] _IPhonePinstripes_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.IPhonePinstripes.png");
        private static byte[] _IPhonePinstripes;
        /// <summary>
        /// Gets or sets the IPhonePinstripes image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/IPhonePinstripes.png" alt="" title="IPhonePinstripes" />
        /// </remarks>
        public static byte[] IPhonePinstripes
        {
            get { return _IPhonePinstripes ?? _IPhonePinstripes_Stock; }
            set { _IPhonePinstripes = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="IPhonePinstripes"/> image has been customised or not.
        /// </summary>
        public static bool IPhonePinstripes_IsCustom
        {
            get { return _IPhonePinstripes != null; }
        }

        private static readonly byte[] _IPhoneSelectedTick_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.IPhoneSelectedTick.png");
        private static byte[] _IPhoneSelectedTick;
        /// <summary>
        /// Gets or sets the IPhoneSelectedTick image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/IPhoneSelectedTick.png" alt="" title="IPhoneSelectedTick" />
        /// </remarks>
        public static byte[] IPhoneSelectedTick
        {
            get { return _IPhoneSelectedTick ?? _IPhoneSelectedTick_Stock; }
            set { _IPhoneSelectedTick = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="IPhoneSelectedTick"/> image has been customised or not.
        /// </summary>
        public static bool IPhoneSelectedTick_IsCustom
        {
            get { return _IPhoneSelectedTick != null; }
        }

        private static readonly byte[] _IPhoneSelection_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.IPhoneSelection.png");
        private static byte[] _IPhoneSelection;
        /// <summary>
        /// Gets or sets the IPhoneSelection image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/IPhoneSelection.png" alt="" title="IPhoneSelection" />
        /// </remarks>
        public static byte[] IPhoneSelection
        {
            get { return _IPhoneSelection ?? _IPhoneSelection_Stock; }
            set { _IPhoneSelection = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="IPhoneSelection"/> image has been customised or not.
        /// </summary>
        public static bool IPhoneSelection_IsCustom
        {
            get { return _IPhoneSelection != null; }
        }

        private static readonly byte[] _IPhoneSplash_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.IPhoneSplash.png");
        private static byte[] _IPhoneSplash;
        /// <summary>
        /// Gets or sets the IPhoneSplash image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/IPhoneSplash.png" alt="" title="IPhoneSplash" />
        /// </remarks>
        public static byte[] IPhoneSplash
        {
            get { return _IPhoneSplash ?? _IPhoneSplash_Stock; }
            set { _IPhoneSplash = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="IPhoneSplash"/> image has been customised or not.
        /// </summary>
        public static bool IPhoneSplash_IsCustom
        {
            get { return _IPhoneSplash != null; }
        }

        private static readonly byte[] _IPhoneToolbar_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.IPhoneToolbar.png");
        private static byte[] _IPhoneToolbar;
        /// <summary>
        /// Gets or sets the IPhoneToolbar image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/IPhoneToolbar.png" alt="" title="IPhoneToolbar" />
        /// </remarks>
        public static byte[] IPhoneToolbar
        {
            get { return _IPhoneToolbar ?? _IPhoneToolbar_Stock; }
            set { _IPhoneToolbar = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="IPhoneToolbar"/> image has been customised or not.
        /// </summary>
        public static bool IPhoneToolbar_IsCustom
        {
            get { return _IPhoneToolbar != null; }
        }

        private static readonly byte[] _IPhoneToolButton_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.IPhoneToolButton.png");
        private static byte[] _IPhoneToolButton;
        /// <summary>
        /// Gets or sets the IPhoneToolButton image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/IPhoneToolButton.png" alt="" title="IPhoneToolButton" />
        /// </remarks>
        public static byte[] IPhoneToolButton
        {
            get { return _IPhoneToolButton ?? _IPhoneToolButton_Stock; }
            set { _IPhoneToolButton = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="IPhoneToolButton"/> image has been customised or not.
        /// </summary>
        public static bool IPhoneToolButton_IsCustom
        {
            get { return _IPhoneToolButton != null; }
        }

        private static readonly byte[] _IPhoneWhiteButton_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.IPhoneWhiteButton.png");
        private static byte[] _IPhoneWhiteButton;
        /// <summary>
        /// Gets or sets the IPhoneWhiteButton image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/IPhoneWhiteButton.png" alt="" title="IPhoneWhiteButton" />
        /// </remarks>
        public static byte[] IPhoneWhiteButton
        {
            get { return _IPhoneWhiteButton ?? _IPhoneWhiteButton_Stock; }
            set { _IPhoneWhiteButton = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="IPhoneWhiteButton"/> image has been customised or not.
        /// </summary>
        public static bool IPhoneWhiteButton_IsCustom
        {
            get { return _IPhoneWhiteButton != null; }
        }

        private static readonly byte[] _Location16x16_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.Location16x16.png");
        private static byte[] _Location16x16;
        /// <summary>
        /// Gets or sets the Location16x16 image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/Location16x16.png" alt="" title="Location16x16" />
        /// </remarks>
        public static byte[] Location16x16
        {
            get { return _Location16x16 ?? _Location16x16_Stock; }
            set { _Location16x16 = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="Location16x16"/> image has been customised or not.
        /// </summary>
        public static bool Location16x16_IsCustom
        {
            get { return _Location16x16 != null; }
        }

        private static readonly byte[] _Logo128x128_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.Logo128x128.png");
        private static byte[] _Logo128x128;
        /// <summary>
        /// Gets or sets the Logo128x128 image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/Logo128x128.png" alt="" title="Logo128x128" />
        /// </remarks>
        public static byte[] Logo128x128
        {
            get { return _Logo128x128 ?? _Logo128x128_Stock; }
            set { _Logo128x128 = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="Logo128x128"/> image has been customised or not.
        /// </summary>
        public static bool Logo128x128_IsCustom
        {
            get { return _Logo128x128 != null; }
        }

        private static readonly byte[] _Marker_Airplane_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.Marker_Airplane.png");
        private static byte[] _Marker_Airplane;
        /// <summary>
        /// Gets or sets the Marker_Airplane image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/Marker_Airplane.png" alt="" title="Marker_Airplane" />
        /// </remarks>
        public static byte[] Marker_Airplane
        {
            get { return _Marker_Airplane ?? _Marker_Airplane_Stock; }
            set { _Marker_Airplane = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="Marker_Airplane"/> image has been customised or not.
        /// </summary>
        public static bool Marker_Airplane_IsCustom
        {
            get { return _Marker_Airplane != null; }
        }

        private static readonly byte[] _Marker_AirplaneSelected_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.Marker_AirplaneSelected.png");
        private static byte[] _Marker_AirplaneSelected;
        /// <summary>
        /// Gets or sets the Marker_AirplaneSelected image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/Marker_AirplaneSelected.png" alt="" title="Marker_AirplaneSelected" />
        /// </remarks>
        public static byte[] Marker_AirplaneSelected
        {
            get { return _Marker_AirplaneSelected ?? _Marker_AirplaneSelected_Stock; }
            set { _Marker_AirplaneSelected = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="Marker_AirplaneSelected"/> image has been customised or not.
        /// </summary>
        public static bool Marker_AirplaneSelected_IsCustom
        {
            get { return _Marker_AirplaneSelected != null; }
        }

        private static readonly byte[] _MergedFeed16x16_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.MergedFeed16x16.png");
        private static byte[] _MergedFeed16x16;
        /// <summary>
        /// Gets or sets the MergedFeed16x16 image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/MergedFeed16x16.png" alt="" title="MergedFeed16x16" />
        /// </remarks>
        public static byte[] MergedFeed16x16
        {
            get { return _MergedFeed16x16 ?? _MergedFeed16x16_Stock; }
            set { _MergedFeed16x16 = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="MergedFeed16x16"/> image has been customised or not.
        /// </summary>
        public static bool MergedFeed16x16_IsCustom
        {
            get { return _MergedFeed16x16 != null; }
        }

        private static readonly byte[] _MovingMapChecked_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.MovingMapChecked.png");
        private static byte[] _MovingMapChecked;
        /// <summary>
        /// Gets or sets the MovingMapChecked image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/MovingMapChecked.png" alt="" title="MovingMapChecked" />
        /// </remarks>
        public static byte[] MovingMapChecked
        {
            get { return _MovingMapChecked ?? _MovingMapChecked_Stock; }
            set { _MovingMapChecked = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="MovingMapChecked"/> image has been customised or not.
        /// </summary>
        public static bool MovingMapChecked_IsCustom
        {
            get { return _MovingMapChecked != null; }
        }

        private static readonly byte[] _MovingMapUnchecked_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.MovingMapUnchecked.png");
        private static byte[] _MovingMapUnchecked;
        /// <summary>
        /// Gets or sets the MovingMapUnchecked image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/MovingMapUnchecked.png" alt="" title="MovingMapUnchecked" />
        /// </remarks>
        public static byte[] MovingMapUnchecked
        {
            get { return _MovingMapUnchecked ?? _MovingMapUnchecked_Stock; }
            set { _MovingMapUnchecked = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="MovingMapUnchecked"/> image has been customised or not.
        /// </summary>
        public static bool MovingMapUnchecked_IsCustom
        {
            get { return _MovingMapUnchecked != null; }
        }

        private static readonly byte[] _Notebook16x16_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.Notebook16x16.png");
        private static byte[] _Notebook16x16;
        /// <summary>
        /// Gets or sets the Notebook16x16 image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/Notebook16x16.png" alt="" title="Notebook16x16" />
        /// </remarks>
        public static byte[] Notebook16x16
        {
            get { return _Notebook16x16 ?? _Notebook16x16_Stock; }
            set { _Notebook16x16 = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="Notebook16x16"/> image has been customised or not.
        /// </summary>
        public static bool Notebook16x16_IsCustom
        {
            get { return _Notebook16x16 != null; }
        }

        private static readonly byte[] _OpenSlider_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.OpenSlider.png");
        private static byte[] _OpenSlider;
        /// <summary>
        /// Gets or sets the OpenSlider image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/OpenSlider.png" alt="" title="OpenSlider" />
        /// </remarks>
        public static byte[] OpenSlider
        {
            get { return _OpenSlider ?? _OpenSlider_Stock; }
            set { _OpenSlider = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="OpenSlider"/> image has been customised or not.
        /// </summary>
        public static bool OpenSlider_IsCustom
        {
            get { return _OpenSlider != null; }
        }

        private static readonly byte[] _Radio16x16_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.Radio16x16.png");
        private static byte[] _Radio16x16;
        /// <summary>
        /// Gets or sets the Radio16x16 image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/Radio16x16.png" alt="" title="Radio16x16" />
        /// </remarks>
        public static byte[] Radio16x16
        {
            get { return _Radio16x16 ?? _Radio16x16_Stock; }
            set { _Radio16x16 = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="Radio16x16"/> image has been customised or not.
        /// </summary>
        public static bool Radio16x16_IsCustom
        {
            get { return _Radio16x16 != null; }
        }

        private static readonly byte[] _Radio48x48_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.Radio48x48.png");
        private static byte[] _Radio48x48;
        /// <summary>
        /// Gets or sets the Radio48x48 image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/Radio48x48.png" alt="" title="Radio48x48" />
        /// </remarks>
        public static byte[] Radio48x48
        {
            get { return _Radio48x48 ?? _Radio48x48_Stock; }
            set { _Radio48x48 = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="Radio48x48"/> image has been customised or not.
        /// </summary>
        public static bool Radio48x48_IsCustom
        {
            get { return _Radio48x48 != null; }
        }

        private static readonly byte[] _Rebroadcast16x16_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.Rebroadcast16x16.png");
        private static byte[] _Rebroadcast16x16;
        /// <summary>
        /// Gets or sets the Rebroadcast16x16 image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/Rebroadcast16x16.png" alt="" title="Rebroadcast16x16" />
        /// </remarks>
        public static byte[] Rebroadcast16x16
        {
            get { return _Rebroadcast16x16 ?? _Rebroadcast16x16_Stock; }
            set { _Rebroadcast16x16 = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="Rebroadcast16x16"/> image has been customised or not.
        /// </summary>
        public static bool Rebroadcast16x16_IsCustom
        {
            get { return _Rebroadcast16x16 != null; }
        }

        private static readonly byte[] _RowHeader_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.RowHeader.png");
        private static byte[] _RowHeader;
        /// <summary>
        /// Gets or sets the RowHeader image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/RowHeader.png" alt="" title="RowHeader" />
        /// </remarks>
        public static byte[] RowHeader
        {
            get { return _RowHeader ?? _RowHeader_Stock; }
            set { _RowHeader = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="RowHeader"/> image has been customised or not.
        /// </summary>
        public static bool RowHeader_IsCustom
        {
            get { return _RowHeader != null; }
        }

        private static readonly byte[] _RowHeaderSelected_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.RowHeaderSelected.png");
        private static byte[] _RowHeaderSelected;
        /// <summary>
        /// Gets or sets the RowHeaderSelected image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/RowHeaderSelected.png" alt="" title="RowHeaderSelected" />
        /// </remarks>
        public static byte[] RowHeaderSelected
        {
            get { return _RowHeaderSelected ?? _RowHeaderSelected_Stock; }
            set { _RowHeaderSelected = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="RowHeaderSelected"/> image has been customised or not.
        /// </summary>
        public static bool RowHeaderSelected_IsCustom
        {
            get { return _RowHeaderSelected != null; }
        }

        private static readonly byte[] _Server16x16_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.Server16x16.png");
        private static byte[] _Server16x16;
        /// <summary>
        /// Gets or sets the Server16x16 image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/Server16x16.png" alt="" title="Server16x16" />
        /// </remarks>
        public static byte[] Server16x16
        {
            get { return _Server16x16 ?? _Server16x16_Stock; }
            set { _Server16x16 = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="Server16x16"/> image has been customised or not.
        /// </summary>
        public static bool Server16x16_IsCustom
        {
            get { return _Server16x16 != null; }
        }

        private static readonly byte[] _ShowList_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.ShowList.png");
        private static byte[] _ShowList;
        /// <summary>
        /// Gets or sets the ShowList image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/ShowList.png" alt="" title="ShowList" />
        /// </remarks>
        public static byte[] ShowList
        {
            get { return _ShowList ?? _ShowList_Stock; }
            set { _ShowList = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="ShowList"/> image has been customised or not.
        /// </summary>
        public static bool ShowList_IsCustom
        {
            get { return _ShowList != null; }
        }

        private static readonly byte[] _Site16x16_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.Site16x16.png");
        private static byte[] _Site16x16;
        /// <summary>
        /// Gets or sets the Site16x16 image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/Site16x16.png" alt="" title="Site16x16" />
        /// </remarks>
        public static byte[] Site16x16
        {
            get { return _Site16x16 ?? _Site16x16_Stock; }
            set { _Site16x16 = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="Site16x16"/> image has been customised or not.
        /// </summary>
        public static bool Site16x16_IsCustom
        {
            get { return _Site16x16 != null; }
        }

        private static readonly byte[] _SmallPlaneNorth_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.SmallPlaneNorth.png");
        private static byte[] _SmallPlaneNorth;
        /// <summary>
        /// Gets or sets the SmallPlaneNorth image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/SmallPlaneNorth.png" alt="" title="SmallPlaneNorth" />
        /// </remarks>
        public static byte[] SmallPlaneNorth
        {
            get { return _SmallPlaneNorth ?? _SmallPlaneNorth_Stock; }
            set { _SmallPlaneNorth = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="SmallPlaneNorth"/> image has been customised or not.
        /// </summary>
        public static bool SmallPlaneNorth_IsCustom
        {
            get { return _SmallPlaneNorth != null; }
        }

        private static readonly byte[] _Test16x16_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.Test16x16.png");
        private static byte[] _Test16x16;
        /// <summary>
        /// Gets or sets the Test16x16 image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/Test16x16.png" alt="" title="Test16x16" />
        /// </remarks>
        public static byte[] Test16x16
        {
            get { return _Test16x16 ?? _Test16x16_Stock; }
            set { _Test16x16 = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="Test16x16"/> image has been customised or not.
        /// </summary>
        public static bool Test16x16_IsCustom
        {
            get { return _Test16x16 != null; }
        }

        private static readonly byte[] _TestSquare_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.TestSquare.png");
        private static byte[] _TestSquare;
        /// <summary>
        /// Gets or sets the TestSquare image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/TestSquare.png" alt="" title="TestSquare" />
        /// </remarks>
        public static byte[] TestSquare
        {
            get { return _TestSquare ?? _TestSquare_Stock; }
            set { _TestSquare = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="TestSquare"/> image has been customised or not.
        /// </summary>
        public static bool TestSquare_IsCustom
        {
            get { return _TestSquare != null; }
        }

        private static readonly byte[] _Tower_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.Tower.png");
        private static byte[] _Tower;
        /// <summary>
        /// Gets or sets the Tower image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/Tower.png" alt="" title="Tower" />
        /// </remarks>
        public static byte[] Tower
        {
            get { return _Tower ?? _Tower_Stock; }
            set { _Tower = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="Tower"/> image has been customised or not.
        /// </summary>
        public static bool Tower_IsCustom
        {
            get { return _Tower != null; }
        }

        private static readonly byte[] _Transparent_25_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.Transparent-25.png");
        private static byte[] _Transparent_25;
        /// <summary>
        /// Gets or sets the Transparent_25 image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/Transparent-25.png" alt="" title="Transparent_25" />
        /// </remarks>
        public static byte[] Transparent_25
        {
            get { return _Transparent_25 ?? _Transparent_25_Stock; }
            set { _Transparent_25 = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="Transparent_25"/> image has been customised or not.
        /// </summary>
        public static bool Transparent_25_IsCustom
        {
            get { return _Transparent_25 != null; }
        }

        private static readonly byte[] _Transparent_50_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.Transparent-50.png");
        private static byte[] _Transparent_50;
        /// <summary>
        /// Gets or sets the Transparent_50 image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/Transparent-50.png" alt="" title="Transparent_50" />
        /// </remarks>
        public static byte[] Transparent_50
        {
            get { return _Transparent_50 ?? _Transparent_50_Stock; }
            set { _Transparent_50 = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="Transparent_50"/> image has been customised or not.
        /// </summary>
        public static bool Transparent_50_IsCustom
        {
            get { return _Transparent_50 != null; }
        }

        private static readonly byte[] _Transparent_16x16_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.Transparent_16x16.png");
        private static byte[] _Transparent_16x16;
        /// <summary>
        /// Gets or sets the Transparent_16x16 image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/Transparent_16x16.png" alt="" title="Transparent_16x16" />
        /// </remarks>
        public static byte[] Transparent_16x16
        {
            get { return _Transparent_16x16 ?? _Transparent_16x16_Stock; }
            set { _Transparent_16x16 = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="Transparent_16x16"/> image has been customised or not.
        /// </summary>
        public static bool Transparent_16x16_IsCustom
        {
            get { return _Transparent_16x16 != null; }
        }

        private static readonly byte[] _User16x16_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.User16x16.png");
        private static byte[] _User16x16;
        /// <summary>
        /// Gets or sets the User16x16 image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/User16x16.png" alt="" title="User16x16" />
        /// </remarks>
        public static byte[] User16x16
        {
            get { return _User16x16 ?? _User16x16_Stock; }
            set { _User16x16 = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="User16x16"/> image has been customised or not.
        /// </summary>
        public static bool User16x16_IsCustom
        {
            get { return _User16x16 != null; }
        }

        private static readonly byte[] _Volume0_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.Volume0.png");
        private static byte[] _Volume0;
        /// <summary>
        /// Gets or sets the Volume0 image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/Volume0.png" alt="" title="Volume0" />
        /// </remarks>
        public static byte[] Volume0
        {
            get { return _Volume0 ?? _Volume0_Stock; }
            set { _Volume0 = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="Volume0"/> image has been customised or not.
        /// </summary>
        public static bool Volume0_IsCustom
        {
            get { return _Volume0 != null; }
        }

        private static readonly byte[] _Volume100_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.Volume100.png");
        private static byte[] _Volume100;
        /// <summary>
        /// Gets or sets the Volume100 image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/Volume100.png" alt="" title="Volume100" />
        /// </remarks>
        public static byte[] Volume100
        {
            get { return _Volume100 ?? _Volume100_Stock; }
            set { _Volume100 = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="Volume100"/> image has been customised or not.
        /// </summary>
        public static bool Volume100_IsCustom
        {
            get { return _Volume100 != null; }
        }

        private static readonly byte[] _Volume25_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.Volume25.png");
        private static byte[] _Volume25;
        /// <summary>
        /// Gets or sets the Volume25 image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/Volume25.png" alt="" title="Volume25" />
        /// </remarks>
        public static byte[] Volume25
        {
            get { return _Volume25 ?? _Volume25_Stock; }
            set { _Volume25 = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="Volume25"/> image has been customised or not.
        /// </summary>
        public static bool Volume25_IsCustom
        {
            get { return _Volume25 != null; }
        }

        private static readonly byte[] _Volume50_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.Volume50.png");
        private static byte[] _Volume50;
        /// <summary>
        /// Gets or sets the Volume50 image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/Volume50.png" alt="" title="Volume50" />
        /// </remarks>
        public static byte[] Volume50
        {
            get { return _Volume50 ?? _Volume50_Stock; }
            set { _Volume50 = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="Volume50"/> image has been customised or not.
        /// </summary>
        public static bool Volume50_IsCustom
        {
            get { return _Volume50 != null; }
        }

        private static readonly byte[] _Volume75_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.Volume75.png");
        private static byte[] _Volume75;
        /// <summary>
        /// Gets or sets the Volume75 image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/Volume75.png" alt="" title="Volume75" />
        /// </remarks>
        public static byte[] Volume75
        {
            get { return _Volume75 ?? _Volume75_Stock; }
            set { _Volume75 = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="Volume75"/> image has been customised or not.
        /// </summary>
        public static bool Volume75_IsCustom
        {
            get { return _Volume75 != null; }
        }

        private static readonly byte[] _VolumeDown_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.VolumeDown.png");
        private static byte[] _VolumeDown;
        /// <summary>
        /// Gets or sets the VolumeDown image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/VolumeDown.png" alt="" title="VolumeDown" />
        /// </remarks>
        public static byte[] VolumeDown
        {
            get { return _VolumeDown ?? _VolumeDown_Stock; }
            set { _VolumeDown = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="VolumeDown"/> image has been customised or not.
        /// </summary>
        public static bool VolumeDown_IsCustom
        {
            get { return _VolumeDown != null; }
        }

        private static readonly byte[] _VolumeMute_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.VolumeMute.png");
        private static byte[] _VolumeMute;
        /// <summary>
        /// Gets or sets the VolumeMute image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/VolumeMute.png" alt="" title="VolumeMute" />
        /// </remarks>
        public static byte[] VolumeMute
        {
            get { return _VolumeMute ?? _VolumeMute_Stock; }
            set { _VolumeMute = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="VolumeMute"/> image has been customised or not.
        /// </summary>
        public static bool VolumeMute_IsCustom
        {
            get { return _VolumeMute != null; }
        }

        private static readonly byte[] _VolumeUp_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.VolumeUp.png");
        private static byte[] _VolumeUp;
        /// <summary>
        /// Gets or sets the VolumeUp image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/VolumeUp.png" alt="" title="VolumeUp" />
        /// </remarks>
        public static byte[] VolumeUp
        {
            get { return _VolumeUp ?? _VolumeUp_Stock; }
            set { _VolumeUp = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="VolumeUp"/> image has been customised or not.
        /// </summary>
        public static bool VolumeUp_IsCustom
        {
            get { return _VolumeUp != null; }
        }

        private static readonly byte[] _WarningBitmap_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.WarningBitmap.png");
        private static byte[] _WarningBitmap;
        /// <summary>
        /// Gets or sets the WarningBitmap image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/WarningBitmap.png" alt="" title="WarningBitmap" />
        /// </remarks>
        public static byte[] WarningBitmap
        {
            get { return _WarningBitmap ?? _WarningBitmap_Stock; }
            set { _WarningBitmap = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="WarningBitmap"/> image has been customised or not.
        /// </summary>
        public static bool WarningBitmap_IsCustom
        {
            get { return _WarningBitmap != null; }
        }

        private static readonly byte[] _WarningIcon_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.WarningIcon.ico");
        private static byte[] _WarningIcon;
        /// <summary>
        /// Gets or sets the WarningIcon image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/WarningIcon.ico" alt="" title="WarningIcon" />
        /// </remarks>
        public static byte[] WarningIcon
        {
            get { return _WarningIcon ?? _WarningIcon_Stock; }
            set { _WarningIcon = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="WarningIcon"/> image has been customised or not.
        /// </summary>
        public static bool WarningIcon_IsCustom
        {
            get { return _WarningIcon != null; }
        }

        private static readonly byte[] _Wizard16x16_Stock = global::VirtualRadar.Resources.BinaryResources.Copy("Images.Wizard16x16.png");
        private static byte[] _Wizard16x16;
        /// <summary>
        /// Gets or sets the Wizard16x16 image bytes.
        /// </summary>
        /// <remarks>
        /// <img src="../TestImages/Wizard16x16.png" alt="" title="Wizard16x16" />
        /// </remarks>
        public static byte[] Wizard16x16
        {
            get { return _Wizard16x16 ?? _Wizard16x16_Stock; }
            set { _Wizard16x16 = value; }
        }

        /// <summary>
        /// Gets a value indicating whether the <see cref="Wizard16x16"/> image has been customised or not.
        /// </summary>
        public static bool Wizard16x16_IsCustom
        {
            get { return _Wizard16x16 != null; }
        }
    }
}
